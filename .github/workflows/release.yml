# .github/workflows/release.yml
name: Release HeadCNI

on:
  push:
    tags:
      - 'v*'  # 当推送 v1.0.0, v1.0.1 等标签时触发
  workflow_dispatch:  # 手动触发
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  GO_VERSION: '1.24'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的 git 历史

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Install dependencies
      run: |
        go mod download
        go mod tidy

    - name: Run tests
      run: make test

    - name: Make scripts executable
      run: |
        chmod +x scripts/*.sh

    - name: Build all platforms
      run: make build-all-script

    - name: Create release packages
      run: make release-script

    - name: Generate release notes
      id: generate_notes
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        COMMIT=$(git rev-parse --short HEAD)
        BUILD_DATE=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        cat > release-notes.md << EOF
        # HeadCNI Plugin ${VERSION}
        
        ## 📦 Release Information
        - **Version**: ${VERSION}
        - **Commit**: ${COMMIT}
        - **Build Date**: ${BUILD_DATE}
        
        ## 🚀 What's New
        - Latest stable release of HeadCNI plugin
        - Multi-architecture support
        - CGO enabled for amd64 builds for better performance
        
        ## 📋 Supported Platforms
        - **Linux**: 386, amd64, arm, arm64, s390x, ppc64le, riscv64
        - **Windows**: amd64, arm64
        - **macOS**: amd64 (Intel), arm64 (Apple Silicon)
        
        ## 🔧 Installation
        
        ### Quick Install (Linux/macOS)
        \`\`\`bash
        # Download and install
        curl -L https://github.com/\${{ github.repository }}/releases/download/${VERSION}/headcni-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m | sed 's/x86_64/amd64/').tar.gz | tar -xz
        sudo mv headcni /opt/cni/bin/
        \`\`\`
        
        ### Manual Install
        1. Download the appropriate archive for your platform
        2. Extract the binary
        3. Move to `/opt/cni/bin/` (or your CNI bin directory)
        4. Make executable with \`chmod +x /opt/cni/bin/headcni\`
        
        ## 📄 Configuration
        Create a CNI configuration file in \`/etc/cni/net.d/\`:
        \`\`\`json
        {
          "cniVersion": "0.4.0",
          "name": "headcni-network",
          "plugins": [
            {
              "type": "headcni",
              "delegate": {
                "type": "bridge",
                "bridge": "cni0"
              }
            }
          ]
        }
        \`\`\`
        
        ## ✅ Verification
        \`\`\`bash
        /opt/cni/bin/headcni --version
        \`\`\`
        
        ## 🐛 Bug Reports & Feature Requests
        Please report issues at: https://github.com/\${{ github.repository }}/issues
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: HeadCNI ${{ steps.get_version.outputs.version }}
        body_path: release-notes.md
        draft: false
        prerelease: false
        files: |
          release/*.tar.gz
          release/*.zip
          release/*.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: headcni-binaries-${{ steps.get_version.outputs.version }}
        path: |
          headcni-*
          release/
        retention-days: 30